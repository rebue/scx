<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.github.rebue.scx.gateway</groupId>
    <artifactId>gateway-svr</artifactId>
    <version>3.5.33</version>
    <description>Spring Cloud Gateway 网关</description>

    <properties>
        <docker.image.prefix>docker.io/nnzbz</docker.image.prefix>
        <wheel.version>3.5.33</wheel.version>
    </properties>

    <url>https://github.com/rebue/scx</url>
    <developers>
        <developer>
            <name>zhangbaizi</name>
            <email>nnzbz@163.com</email>
        </developer>
    </developers>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:https://github.com/rebue/scx</connection>
        <developerConnection>scm:git:https://github.com/rebue/scx.git</developerConnection>
        <url>https://github.com/rebue/scx.git</url>
    </scm>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.rebue.scx.gateway</groupId>
                <artifactId>gateway</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.github.rebue.wheel</groupId>
                <artifactId>wheel</artifactId>
                <version>${wheel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>

        <!-- 注册中心 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- 配置中心 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-config</artifactId>
        </dependency>

        <!-- Spring Cloud Gateway监控 -->
        <!-- https://docs.spring.io/spring-cloud-gateway/reference/spring-cloud-gateway/actuator-api.html -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- SpringBoot服务项目打包插件，会分全包和原始包，并且会配置MANIFEST.MF文件设置运行的主类 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- 制作docker镜像的插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <!-- 绑定到install阶段执行 -->
                        <!--                        <phase>install</phase>-->
                        <!-- 不绑定到任何阶段，也就不会执行 -->
                        <phase></phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 此选项指定在settings.xml文件中设置的server -->
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    <!-- 部署到私服，${my-docker.host}在settins.xml中统一配置 -->
                    <!-- <repository>${my-docker.host}/${docker.image.prefix}/${project.artifactId}</repository> -->
                    <!-- 部署到hub.docker.com -->
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        <VERSION>${project.version}</VERSION>
                    </buildArgs>
                    <verbose>true</verbose>
                    <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>deploy-private</id>
            <!-- 部署私服 -->
            <distributionManagement>
                <snapshotRepository>
                    <id>my-snapshots</id>
                    <name>my-snapshots</name>
                    <url>${my-snapshots.url}</url>
                    <uniqueVersion>true</uniqueVersion>
                </snapshotRepository>
                <repository>
                    <id>my-releases</id>
                    <name>my-releases</name>
                    <url>${my-releases.url}</url>
                </repository>
            </distributionManagement>
        </profile>

        <profile>
            <id>deploy-public</id>
            <!-- 部署中央仓库 -->
            <distributionManagement>
                <snapshotRepository>
                    <id>oss</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <repository>
                    <id>oss</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>

            <build>
                <plugins>
                    <!-- 创建源码包 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 创建文档包 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.6.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 部署时用GPG数字签名 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- 指定密钥的名称(可能会有多个生成的密钥) -->
                                    <keyname>${gpg.keyname}</keyname>
                                    <!-- 如果gpg服务有密钥，在settings.xml文件中配置 -->
                                    <passphraseServerId>gpg</passphraseServerId>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>